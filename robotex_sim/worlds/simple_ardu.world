<?xml version="1.0" ?>
<!--

To run this demo, you must have following arducopter repo checked out:

https://github.com/iche033/ardupilot/tree/gazebo_sitl_irlock

Compile ArduCopter with SITL mode. Instructions are similar to:

http://ardupilot.org/dev/docs/building-px4-for-linux-with-make.html

but change the make target to sitl instead of px4-v2, i.e.

$ cd ardupilot/ArduCopter && make sitl

To start simulation, first run gazebo:

gazebo worlds/iris_irlock_demo.world

Gazebo starts up paused in a black screen. To run the simulation,
setup ArduCopter and run the command below in a separate terminal:

sim_vehicle.sh -j 4 -f Gazebo

This will start mavproxy. Wait until you have a GPS lock.
You can then do the usual mavprox commands with Gazebo, e.g.

# arm the motors
STABILIZE> arm throttle

# switch to LOITER mode
STABILIZE> mode LOITER

# take off using rc command
LOITER> rc 3 1700

# wait until the irlock beacon is within the view then switch to land mode
# to begin precision landing
LOITER> mode LAND

-->
<sdf version="1.6">
    <world name="default">
        <gravity>0 0 -9.8066</gravity>
        <magnetic_field>6.0e-6 2.3e-5 -4.2e-5</magnetic_field>
        <physics name="default_physics" default="0" type="ode">
            <ode>
                <solver>
                    <type>quick</type>
                    <iters>10</iters>
                    <sor>1.3</sor>
                    <use_dynamic_moi_rescaling>0</use_dynamic_moi_rescaling>
                </solver>
                <constraints>
                    <cfm>0</cfm>
                    <erp>0.2</erp>
                    <contact_max_correcting_vel>100</contact_max_correcting_vel>
                    <contact_surface_layer>0.001</contact_surface_layer>
                </constraints>
            </ode>
            <max_step_size>0.001</max_step_size>
            <real_time_factor>1</real_time_factor>
            <real_time_update_rate>700</real_time_update_rate>

        </physics>
        <include>
            <uri>model://sun</uri>
        </include>
        <model name='simple_ground_plane'>
            <static>1</static>
            <link name='link'>
                <collision name='collision'>
                    <geometry>
                        <plane>
                            <normal>0 0 1</normal>
                            <size>11 6</size>
                        </plane>
                    </geometry>
                    <surface>
                        <friction>
                            <ode>
                                <mu>100</mu>
                                <mu2>50</mu2>
                            </ode>
                            <torsional>
                                <ode/>
                            </torsional>
                        </friction>
                        <contact>
                            <ode/>
                        </contact>
                        <bounce/>
                    </surface>
                    <max_contacts>10</max_contacts>
                </collision>
                <visual name='visual'>
                    <cast_shadows>0</cast_shadows>
                    <geometry>
                        <plane>
                            <normal>0 0 1</normal>
                            <size>11 6</size>
                        </plane>
                    </geometry>
                    <material>
                        <script>
                            <uri>model://materials/scripts</uri>
                            <uri>model://materials/textures/</uri>
                            <name>SimpleGroundPlane/Image</name>
                        </script>
                    </material>
                </visual>
                <self_collide>0</self_collide>
                <enable_wind>0</enable_wind>
                <kinematic>0</kinematic>
            </link>
            <pose frame=''>4.44943 0.070291 0 0 -0 0</pose>
        </model>
        <model name="iris">
            <!--<pose> 0 -0.5 0.2 0 0 1.22 </pose>-->
            <pose> 0 0 0.15 0 0 1.57 </pose>
            <include>
                <uri>model://iris_with_standoffs_demo</uri>
                <pose> 0 0 0 0 0 0 </pose>
            </include>
        </model>
    </world>
</sdf>
